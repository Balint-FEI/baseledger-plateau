// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: baseledgerbridge/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgUbtDepositedClaim struct {
	Creator        string                                 `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	EventNonce     uint64                                 `protobuf:"varint,2,opt,name=eventNonce,proto3" json:"eventNonce,omitempty"`
	BlockHeight    uint64                                 `protobuf:"varint,3,opt,name=blockHeight,proto3" json:"blockHeight,omitempty"`
	TokenContract  string                                 `protobuf:"bytes,4,opt,name=tokenContract,proto3" json:"tokenContract,omitempty"`
	Amount         github_com_cosmos_cosmos_sdk_types.Int `protobuf:"bytes,5,opt,name=amount,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Int" json:"amount"`
	EthereumSender string                                 `protobuf:"bytes,6,opt,name=ethereumSender,proto3" json:"ethereumSender,omitempty"`
	CosmosReceiver string                                 `protobuf:"bytes,7,opt,name=cosmosReceiver,proto3" json:"cosmosReceiver,omitempty"`
	UbtPrice       github_com_cosmos_cosmos_sdk_types.Int `protobuf:"bytes,8,opt,name=ubtPrice,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Int" json:"ubtPrice"`
}

func (m *MsgUbtDepositedClaim) Reset()         { *m = MsgUbtDepositedClaim{} }
func (m *MsgUbtDepositedClaim) String() string { return proto.CompactTextString(m) }
func (*MsgUbtDepositedClaim) ProtoMessage()    {}
func (*MsgUbtDepositedClaim) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c0dd594d513d4b4, []int{0}
}
func (m *MsgUbtDepositedClaim) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUbtDepositedClaim) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUbtDepositedClaim.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUbtDepositedClaim) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUbtDepositedClaim.Merge(m, src)
}
func (m *MsgUbtDepositedClaim) XXX_Size() int {
	return m.Size()
}
func (m *MsgUbtDepositedClaim) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUbtDepositedClaim.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUbtDepositedClaim proto.InternalMessageInfo

func (m *MsgUbtDepositedClaim) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUbtDepositedClaim) GetEventNonce() uint64 {
	if m != nil {
		return m.EventNonce
	}
	return 0
}

func (m *MsgUbtDepositedClaim) GetBlockHeight() uint64 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *MsgUbtDepositedClaim) GetTokenContract() string {
	if m != nil {
		return m.TokenContract
	}
	return ""
}

func (m *MsgUbtDepositedClaim) GetEthereumSender() string {
	if m != nil {
		return m.EthereumSender
	}
	return ""
}

func (m *MsgUbtDepositedClaim) GetCosmosReceiver() string {
	if m != nil {
		return m.CosmosReceiver
	}
	return ""
}

type MsgUbtDepositedClaimResponse struct {
}

func (m *MsgUbtDepositedClaimResponse) Reset()         { *m = MsgUbtDepositedClaimResponse{} }
func (m *MsgUbtDepositedClaimResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUbtDepositedClaimResponse) ProtoMessage()    {}
func (*MsgUbtDepositedClaimResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c0dd594d513d4b4, []int{1}
}
func (m *MsgUbtDepositedClaimResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUbtDepositedClaimResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUbtDepositedClaimResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUbtDepositedClaimResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUbtDepositedClaimResponse.Merge(m, src)
}
func (m *MsgUbtDepositedClaimResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUbtDepositedClaimResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUbtDepositedClaimResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUbtDepositedClaimResponse proto.InternalMessageInfo

type MsgSetOrchestratorAddress struct {
	Validator    string `protobuf:"bytes,1,opt,name=validator,proto3" json:"validator,omitempty"`
	Orchestrator string `protobuf:"bytes,2,opt,name=orchestrator,proto3" json:"orchestrator,omitempty"`
	EthAddress   string `protobuf:"bytes,3,opt,name=ethAddress,proto3" json:"ethAddress,omitempty"`
}

func (m *MsgSetOrchestratorAddress) Reset()         { *m = MsgSetOrchestratorAddress{} }
func (m *MsgSetOrchestratorAddress) String() string { return proto.CompactTextString(m) }
func (*MsgSetOrchestratorAddress) ProtoMessage()    {}
func (*MsgSetOrchestratorAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c0dd594d513d4b4, []int{2}
}
func (m *MsgSetOrchestratorAddress) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetOrchestratorAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetOrchestratorAddress.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetOrchestratorAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetOrchestratorAddress.Merge(m, src)
}
func (m *MsgSetOrchestratorAddress) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetOrchestratorAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetOrchestratorAddress.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetOrchestratorAddress proto.InternalMessageInfo

func (m *MsgSetOrchestratorAddress) GetValidator() string {
	if m != nil {
		return m.Validator
	}
	return ""
}

func (m *MsgSetOrchestratorAddress) GetOrchestrator() string {
	if m != nil {
		return m.Orchestrator
	}
	return ""
}

func (m *MsgSetOrchestratorAddress) GetEthAddress() string {
	if m != nil {
		return m.EthAddress
	}
	return ""
}

type MsgSetOrchestratorAddressResponse struct {
}

func (m *MsgSetOrchestratorAddressResponse) Reset()         { *m = MsgSetOrchestratorAddressResponse{} }
func (m *MsgSetOrchestratorAddressResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetOrchestratorAddressResponse) ProtoMessage()    {}
func (*MsgSetOrchestratorAddressResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c0dd594d513d4b4, []int{3}
}
func (m *MsgSetOrchestratorAddressResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetOrchestratorAddressResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetOrchestratorAddressResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetOrchestratorAddressResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetOrchestratorAddressResponse.Merge(m, src)
}
func (m *MsgSetOrchestratorAddressResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetOrchestratorAddressResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetOrchestratorAddressResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetOrchestratorAddressResponse proto.InternalMessageInfo

type MsgValidatorPowerChangedClaim struct {
	Creator        string                                 `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	EventNonce     uint64                                 `protobuf:"varint,2,opt,name=eventNonce,proto3" json:"eventNonce,omitempty"`
	BlockHeight    uint64                                 `protobuf:"varint,3,opt,name=blockHeight,proto3" json:"blockHeight,omitempty"`
	TokenContract  string                                 `protobuf:"bytes,4,opt,name=tokenContract,proto3" json:"tokenContract,omitempty"`
	Amount         github_com_cosmos_cosmos_sdk_types.Int `protobuf:"bytes,5,opt,name=amount,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Int" json:"amount"`
	EthereumSender string                                 `protobuf:"bytes,6,opt,name=ethereumSender,proto3" json:"ethereumSender,omitempty"`
	CosmosReceiver string                                 `protobuf:"bytes,7,opt,name=cosmosReceiver,proto3" json:"cosmosReceiver,omitempty"`
}

func (m *MsgValidatorPowerChangedClaim) Reset()         { *m = MsgValidatorPowerChangedClaim{} }
func (m *MsgValidatorPowerChangedClaim) String() string { return proto.CompactTextString(m) }
func (*MsgValidatorPowerChangedClaim) ProtoMessage()    {}
func (*MsgValidatorPowerChangedClaim) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c0dd594d513d4b4, []int{4}
}
func (m *MsgValidatorPowerChangedClaim) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgValidatorPowerChangedClaim) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgValidatorPowerChangedClaim.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgValidatorPowerChangedClaim) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgValidatorPowerChangedClaim.Merge(m, src)
}
func (m *MsgValidatorPowerChangedClaim) XXX_Size() int {
	return m.Size()
}
func (m *MsgValidatorPowerChangedClaim) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgValidatorPowerChangedClaim.DiscardUnknown(m)
}

var xxx_messageInfo_MsgValidatorPowerChangedClaim proto.InternalMessageInfo

func (m *MsgValidatorPowerChangedClaim) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgValidatorPowerChangedClaim) GetEventNonce() uint64 {
	if m != nil {
		return m.EventNonce
	}
	return 0
}

func (m *MsgValidatorPowerChangedClaim) GetBlockHeight() uint64 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *MsgValidatorPowerChangedClaim) GetTokenContract() string {
	if m != nil {
		return m.TokenContract
	}
	return ""
}

func (m *MsgValidatorPowerChangedClaim) GetEthereumSender() string {
	if m != nil {
		return m.EthereumSender
	}
	return ""
}

func (m *MsgValidatorPowerChangedClaim) GetCosmosReceiver() string {
	if m != nil {
		return m.CosmosReceiver
	}
	return ""
}

type MsgValidatorPowerChangedClaimResponse struct {
}

func (m *MsgValidatorPowerChangedClaimResponse) Reset()         { *m = MsgValidatorPowerChangedClaimResponse{} }
func (m *MsgValidatorPowerChangedClaimResponse) String() string { return proto.CompactTextString(m) }
func (*MsgValidatorPowerChangedClaimResponse) ProtoMessage()    {}
func (*MsgValidatorPowerChangedClaimResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c0dd594d513d4b4, []int{5}
}
func (m *MsgValidatorPowerChangedClaimResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgValidatorPowerChangedClaimResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgValidatorPowerChangedClaimResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgValidatorPowerChangedClaimResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgValidatorPowerChangedClaimResponse.Merge(m, src)
}
func (m *MsgValidatorPowerChangedClaimResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgValidatorPowerChangedClaimResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgValidatorPowerChangedClaimResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgValidatorPowerChangedClaimResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgUbtDepositedClaim)(nil), "Baseledger.baseledgerbridge.baseledgerbridge.MsgUbtDepositedClaim")
	proto.RegisterType((*MsgUbtDepositedClaimResponse)(nil), "Baseledger.baseledgerbridge.baseledgerbridge.MsgUbtDepositedClaimResponse")
	proto.RegisterType((*MsgSetOrchestratorAddress)(nil), "Baseledger.baseledgerbridge.baseledgerbridge.MsgSetOrchestratorAddress")
	proto.RegisterType((*MsgSetOrchestratorAddressResponse)(nil), "Baseledger.baseledgerbridge.baseledgerbridge.MsgSetOrchestratorAddressResponse")
	proto.RegisterType((*MsgValidatorPowerChangedClaim)(nil), "Baseledger.baseledgerbridge.baseledgerbridge.MsgValidatorPowerChangedClaim")
	proto.RegisterType((*MsgValidatorPowerChangedClaimResponse)(nil), "Baseledger.baseledgerbridge.baseledgerbridge.MsgValidatorPowerChangedClaimResponse")
}

func init() { proto.RegisterFile("baseledgerbridge/tx.proto", fileDescriptor_0c0dd594d513d4b4) }

var fileDescriptor_0c0dd594d513d4b4 = []byte{
	// 538 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x55, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0x8e, 0xd3, 0x90, 0x36, 0xc3, 0x8f, 0xc4, 0xaa, 0x42, 0xae, 0x55, 0xdc, 0x60, 0xa0, 0xf4,
	0x40, 0x6d, 0x09, 0x5e, 0x00, 0x12, 0xc4, 0x4f, 0x51, 0x68, 0xe5, 0x08, 0x0e, 0xbd, 0xf9, 0x67,
	0xb4, 0xb6, 0x12, 0x7b, 0xa3, 0xdd, 0x4d, 0x28, 0x07, 0xde, 0x81, 0x57, 0x40, 0xbc, 0x01, 0x37,
	0x2e, 0x9c, 0x7b, 0xec, 0x11, 0x71, 0xa8, 0x50, 0xf2, 0x1a, 0x1c, 0x90, 0x9d, 0x38, 0x71, 0x9a,
	0xa4, 0x28, 0xd0, 0x63, 0x4f, 0x89, 0xbf, 0x9d, 0xf9, 0xbe, 0xf1, 0xcc, 0xb7, 0x1e, 0xd8, 0x70,
	0x1d, 0x81, 0x6d, 0xf4, 0x29, 0x72, 0x97, 0x87, 0x3e, 0x45, 0x4b, 0x1e, 0x99, 0x1d, 0xce, 0x24,
	0x23, 0x0f, 0x6b, 0xe3, 0x23, 0xf3, 0x6c, 0xd4, 0x0c, 0xa0, 0xad, 0x53, 0x46, 0x59, 0x9a, 0x68,
	0x25, 0xff, 0x86, 0x1c, 0xc6, 0xef, 0x22, 0xac, 0x37, 0x04, 0x7d, 0xeb, 0xca, 0x67, 0xd8, 0x61,
	0x22, 0x94, 0xe8, 0xd7, 0xdb, 0x4e, 0x18, 0x11, 0x15, 0x56, 0x3d, 0x8e, 0x8e, 0x64, 0x5c, 0x55,
	0xaa, 0xca, 0x4e, 0xc5, 0xce, 0x1e, 0x89, 0x0e, 0x80, 0x3d, 0x8c, 0xe5, 0x1b, 0x16, 0x7b, 0xa8,
	0x16, 0xab, 0xca, 0x4e, 0xc9, 0xce, 0x21, 0xa4, 0x0a, 0x57, 0xdd, 0x36, 0xf3, 0x5a, 0x2f, 0x31,
	0xa4, 0x81, 0x54, 0x57, 0xd2, 0x80, 0x3c, 0x44, 0xee, 0xc1, 0x75, 0xc9, 0x5a, 0x18, 0xd7, 0x59,
	0x2c, 0xb9, 0xe3, 0x49, 0xb5, 0x94, 0x2a, 0x4c, 0x83, 0xe4, 0x39, 0x94, 0x9d, 0x88, 0x75, 0x63,
	0xa9, 0x5e, 0x49, 0x8e, 0x6b, 0xe6, 0xf1, 0xe9, 0x56, 0xe1, 0xe7, 0xe9, 0xd6, 0x36, 0x0d, 0x65,
	0xd0, 0x75, 0x4d, 0x8f, 0x45, 0x96, 0xc7, 0x44, 0xc4, 0xc4, 0xe8, 0x67, 0x57, 0xf8, 0x2d, 0x4b,
	0x7e, 0xe8, 0xa0, 0x30, 0x5f, 0xc5, 0xd2, 0x1e, 0x65, 0x93, 0x6d, 0xb8, 0x81, 0x32, 0x40, 0x8e,
	0xdd, 0xa8, 0x89, 0xb1, 0x8f, 0x5c, 0x2d, 0xa7, 0x72, 0x67, 0xd0, 0x24, 0x6e, 0xc8, 0x63, 0xa3,
	0x87, 0x61, 0x0f, 0xb9, 0xba, 0x3a, 0x8c, 0x9b, 0x46, 0xc9, 0x1e, 0xac, 0x75, 0x5d, 0x79, 0xc0,
	0x43, 0x0f, 0xd5, 0xb5, 0x7f, 0xaa, 0x6c, 0x9c, 0x6f, 0xe8, 0xb0, 0x39, 0xaf, 0xfb, 0x36, 0x8a,
	0x0e, 0x8b, 0x05, 0x1a, 0x1f, 0x61, 0xa3, 0x21, 0x68, 0x13, 0xe5, 0x3e, 0xf7, 0x02, 0x14, 0x92,
	0x27, 0x13, 0x78, 0xea, 0xfb, 0x1c, 0x85, 0x20, 0x9b, 0x50, 0xe9, 0x39, 0xed, 0xd0, 0xcf, 0x0d,
	0x69, 0x02, 0x10, 0x03, 0xae, 0xb1, 0x5c, 0x52, 0x3a, 0xa8, 0x8a, 0x3d, 0x85, 0xa5, 0xa3, 0x94,
	0xc1, 0x88, 0x2f, 0x9d, 0x54, 0xc5, 0xce, 0x21, 0xc6, 0x5d, 0xb8, 0xb3, 0x50, 0x7e, 0x5c, 0xe3,
	0xb7, 0x22, 0xdc, 0x6e, 0x08, 0xfa, 0x2e, 0x53, 0x3e, 0x60, 0xef, 0x91, 0xd7, 0x03, 0x27, 0xa6,
	0x97, 0x5e, 0xfa, 0x8b, 0x97, 0x8c, 0x07, 0x70, 0xff, 0xdc, 0xd6, 0x65, 0x4d, 0x7e, 0xf4, 0xb9,
	0x04, 0x2b, 0x0d, 0x41, 0xc9, 0x17, 0x05, 0x6e, 0xce, 0x5e, 0xd6, 0x9a, 0xb9, 0xcc, 0xa7, 0xc0,
	0x9c, 0x67, 0x39, 0x6d, 0xef, 0xff, 0x39, 0xb2, 0x6a, 0xc9, 0x57, 0x05, 0x6e, 0x2d, 0x30, 0xed,
	0x8b, 0xa5, 0x65, 0xe6, 0x13, 0x69, 0xfb, 0x17, 0x44, 0x34, 0x2e, 0xfa, 0xbb, 0x02, 0xda, 0x39,
	0x26, 0x7e, 0xbd, 0xb4, 0xde, 0x62, 0x32, 0xad, 0x79, 0x81, 0x64, 0xd9, 0x0b, 0xd4, 0x0e, 0x8f,
	0xfb, 0xba, 0x72, 0xd2, 0xd7, 0x95, 0x5f, 0x7d, 0x5d, 0xf9, 0x34, 0xd0, 0x0b, 0x27, 0x03, 0xbd,
	0xf0, 0x63, 0xa0, 0x17, 0x0e, 0x9f, 0xe4, 0x6c, 0x3e, 0x11, 0xb6, 0x26, 0x3a, 0xbb, 0xa3, 0xdd,
	0x72, 0x64, 0xcd, 0xae, 0x9b, 0xe4, 0x12, 0xb8, 0xe5, 0x74, 0x5d, 0x3c, 0xfe, 0x13, 0x00, 0x00,
	0xff, 0xff, 0xb7, 0xcf, 0x9f, 0xd9, 0x8f, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	UbtDepositedClaim(ctx context.Context, in *MsgUbtDepositedClaim, opts ...grpc.CallOption) (*MsgUbtDepositedClaimResponse, error)
	SetOrchestratorAddress(ctx context.Context, in *MsgSetOrchestratorAddress, opts ...grpc.CallOption) (*MsgSetOrchestratorAddressResponse, error)
	ValidatorPowerChangedClaim(ctx context.Context, in *MsgValidatorPowerChangedClaim, opts ...grpc.CallOption) (*MsgValidatorPowerChangedClaimResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) UbtDepositedClaim(ctx context.Context, in *MsgUbtDepositedClaim, opts ...grpc.CallOption) (*MsgUbtDepositedClaimResponse, error) {
	out := new(MsgUbtDepositedClaimResponse)
	err := c.cc.Invoke(ctx, "/Baseledger.baseledgerbridge.baseledgerbridge.Msg/UbtDepositedClaim", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetOrchestratorAddress(ctx context.Context, in *MsgSetOrchestratorAddress, opts ...grpc.CallOption) (*MsgSetOrchestratorAddressResponse, error) {
	out := new(MsgSetOrchestratorAddressResponse)
	err := c.cc.Invoke(ctx, "/Baseledger.baseledgerbridge.baseledgerbridge.Msg/SetOrchestratorAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ValidatorPowerChangedClaim(ctx context.Context, in *MsgValidatorPowerChangedClaim, opts ...grpc.CallOption) (*MsgValidatorPowerChangedClaimResponse, error) {
	out := new(MsgValidatorPowerChangedClaimResponse)
	err := c.cc.Invoke(ctx, "/Baseledger.baseledgerbridge.baseledgerbridge.Msg/ValidatorPowerChangedClaim", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	UbtDepositedClaim(context.Context, *MsgUbtDepositedClaim) (*MsgUbtDepositedClaimResponse, error)
	SetOrchestratorAddress(context.Context, *MsgSetOrchestratorAddress) (*MsgSetOrchestratorAddressResponse, error)
	ValidatorPowerChangedClaim(context.Context, *MsgValidatorPowerChangedClaim) (*MsgValidatorPowerChangedClaimResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) UbtDepositedClaim(ctx context.Context, req *MsgUbtDepositedClaim) (*MsgUbtDepositedClaimResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UbtDepositedClaim not implemented")
}
func (*UnimplementedMsgServer) SetOrchestratorAddress(ctx context.Context, req *MsgSetOrchestratorAddress) (*MsgSetOrchestratorAddressResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetOrchestratorAddress not implemented")
}
func (*UnimplementedMsgServer) ValidatorPowerChangedClaim(ctx context.Context, req *MsgValidatorPowerChangedClaim) (*MsgValidatorPowerChangedClaimResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidatorPowerChangedClaim not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_UbtDepositedClaim_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUbtDepositedClaim)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UbtDepositedClaim(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Baseledger.baseledgerbridge.baseledgerbridge.Msg/UbtDepositedClaim",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UbtDepositedClaim(ctx, req.(*MsgUbtDepositedClaim))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetOrchestratorAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetOrchestratorAddress)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetOrchestratorAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Baseledger.baseledgerbridge.baseledgerbridge.Msg/SetOrchestratorAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetOrchestratorAddress(ctx, req.(*MsgSetOrchestratorAddress))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ValidatorPowerChangedClaim_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgValidatorPowerChangedClaim)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ValidatorPowerChangedClaim(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Baseledger.baseledgerbridge.baseledgerbridge.Msg/ValidatorPowerChangedClaim",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ValidatorPowerChangedClaim(ctx, req.(*MsgValidatorPowerChangedClaim))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Baseledger.baseledgerbridge.baseledgerbridge.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UbtDepositedClaim",
			Handler:    _Msg_UbtDepositedClaim_Handler,
		},
		{
			MethodName: "SetOrchestratorAddress",
			Handler:    _Msg_SetOrchestratorAddress_Handler,
		},
		{
			MethodName: "ValidatorPowerChangedClaim",
			Handler:    _Msg_ValidatorPowerChangedClaim_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "baseledgerbridge/tx.proto",
}

func (m *MsgUbtDepositedClaim) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUbtDepositedClaim) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUbtDepositedClaim) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size := m.UbtPrice.Size()
		i -= size
		if _, err := m.UbtPrice.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x42
	if len(m.CosmosReceiver) > 0 {
		i -= len(m.CosmosReceiver)
		copy(dAtA[i:], m.CosmosReceiver)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CosmosReceiver)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.EthereumSender) > 0 {
		i -= len(m.EthereumSender)
		copy(dAtA[i:], m.EthereumSender)
		i = encodeVarintTx(dAtA, i, uint64(len(m.EthereumSender)))
		i--
		dAtA[i] = 0x32
	}
	{
		size := m.Amount.Size()
		i -= size
		if _, err := m.Amount.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x2a
	if len(m.TokenContract) > 0 {
		i -= len(m.TokenContract)
		copy(dAtA[i:], m.TokenContract)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TokenContract)))
		i--
		dAtA[i] = 0x22
	}
	if m.BlockHeight != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.BlockHeight))
		i--
		dAtA[i] = 0x18
	}
	if m.EventNonce != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.EventNonce))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUbtDepositedClaimResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUbtDepositedClaimResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUbtDepositedClaimResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetOrchestratorAddress) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetOrchestratorAddress) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetOrchestratorAddress) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.EthAddress) > 0 {
		i -= len(m.EthAddress)
		copy(dAtA[i:], m.EthAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.EthAddress)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Orchestrator) > 0 {
		i -= len(m.Orchestrator)
		copy(dAtA[i:], m.Orchestrator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Orchestrator)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Validator) > 0 {
		i -= len(m.Validator)
		copy(dAtA[i:], m.Validator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Validator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetOrchestratorAddressResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetOrchestratorAddressResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetOrchestratorAddressResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgValidatorPowerChangedClaim) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgValidatorPowerChangedClaim) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgValidatorPowerChangedClaim) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.CosmosReceiver) > 0 {
		i -= len(m.CosmosReceiver)
		copy(dAtA[i:], m.CosmosReceiver)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CosmosReceiver)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.EthereumSender) > 0 {
		i -= len(m.EthereumSender)
		copy(dAtA[i:], m.EthereumSender)
		i = encodeVarintTx(dAtA, i, uint64(len(m.EthereumSender)))
		i--
		dAtA[i] = 0x32
	}
	{
		size := m.Amount.Size()
		i -= size
		if _, err := m.Amount.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x2a
	if len(m.TokenContract) > 0 {
		i -= len(m.TokenContract)
		copy(dAtA[i:], m.TokenContract)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TokenContract)))
		i--
		dAtA[i] = 0x22
	}
	if m.BlockHeight != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.BlockHeight))
		i--
		dAtA[i] = 0x18
	}
	if m.EventNonce != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.EventNonce))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgValidatorPowerChangedClaimResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgValidatorPowerChangedClaimResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgValidatorPowerChangedClaimResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgUbtDepositedClaim) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.EventNonce != 0 {
		n += 1 + sovTx(uint64(m.EventNonce))
	}
	if m.BlockHeight != 0 {
		n += 1 + sovTx(uint64(m.BlockHeight))
	}
	l = len(m.TokenContract)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Amount.Size()
	n += 1 + l + sovTx(uint64(l))
	l = len(m.EthereumSender)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.CosmosReceiver)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.UbtPrice.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgUbtDepositedClaimResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetOrchestratorAddress) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Validator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Orchestrator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.EthAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSetOrchestratorAddressResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgValidatorPowerChangedClaim) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.EventNonce != 0 {
		n += 1 + sovTx(uint64(m.EventNonce))
	}
	if m.BlockHeight != 0 {
		n += 1 + sovTx(uint64(m.BlockHeight))
	}
	l = len(m.TokenContract)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Amount.Size()
	n += 1 + l + sovTx(uint64(l))
	l = len(m.EthereumSender)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.CosmosReceiver)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgValidatorPowerChangedClaimResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgUbtDepositedClaim) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUbtDepositedClaim: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUbtDepositedClaim: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EventNonce", wireType)
			}
			m.EventNonce = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EventNonce |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
			}
			m.BlockHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BlockHeight |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TokenContract", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TokenContract = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Amount.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EthereumSender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EthereumSender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CosmosReceiver", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CosmosReceiver = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UbtPrice", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.UbtPrice.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUbtDepositedClaimResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUbtDepositedClaimResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUbtDepositedClaimResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetOrchestratorAddress) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetOrchestratorAddress: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetOrchestratorAddress: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Validator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Validator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Orchestrator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Orchestrator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EthAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EthAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetOrchestratorAddressResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetOrchestratorAddressResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetOrchestratorAddressResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgValidatorPowerChangedClaim) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgValidatorPowerChangedClaim: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgValidatorPowerChangedClaim: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EventNonce", wireType)
			}
			m.EventNonce = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EventNonce |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
			}
			m.BlockHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BlockHeight |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TokenContract", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TokenContract = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Amount.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EthereumSender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EthereumSender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CosmosReceiver", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CosmosReceiver = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgValidatorPowerChangedClaimResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgValidatorPowerChangedClaimResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgValidatorPowerChangedClaimResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
